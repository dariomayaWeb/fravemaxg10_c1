/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Controlador.CompraData;
import Controlador.DetalleCompraData;
import Modelo.Compra;
import Modelo.DetalleCompra;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class ListaDetalleCompra extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListaDetalleCompra
     */
    private DefaultTableModel modelo;
    private ArrayList<DetalleCompra> listaDetallesCompra;
    private DetalleCompraData detCompData;
    private CompraData compraData;
    private Compra compra;
        
    
    public ListaDetalleCompra(int idCompra) {
        initComponents();
        modelo = new DefaultTableModel();
        detCompData = new DetalleCompraData();
        compraData = new CompraData();
        compra = compraData.buscarCompra(idCompra);
        
        // Agregar if para sacar botones
        if(!compra.isEstado()){
            btnActualizar.setVisible(false);
            btnNuevoDet.setVisible(false);
            btnQuitar.setVisible(false);
            btnModificar.setVisible(false);
        }
        
        armarCabecera();
        cargarDatos(idCompra);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        lblIdCompra = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblProveedor = new javax.swing.JLabel();
        txtIdCompra = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        btnNuevoDet = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDetallesCompra = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));

        btnSalir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(100, 32));
        btnSalir.setMinimumSize(new java.awt.Dimension(100, 32));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Detalles de Compra");

        lblIdCompra.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblIdCompra.setText("Id de Compra:");

        lblFecha.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblFecha.setText("Fecha:");

        lblProveedor.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblProveedor.setText("Proveedor");

        txtIdCompra.setEditable(false);
        txtIdCompra.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtIdCompra.setMinimumSize(new java.awt.Dimension(50, 26));
        txtIdCompra.setPreferredSize(new java.awt.Dimension(50, 26));

        txtFecha.setEditable(false);
        txtFecha.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtFecha.setMinimumSize(new java.awt.Dimension(100, 26));
        txtFecha.setPreferredSize(new java.awt.Dimension(100, 26));

        txtProveedor.setEditable(false);
        txtProveedor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtProveedor.setMinimumSize(new java.awt.Dimension(160, 26));
        txtProveedor.setPreferredSize(new java.awt.Dimension(160, 26));

        btnActualizar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnQuitar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnQuitar.setText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        btnNuevoDet.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnNuevoDet.setText("Agregar");
        btnNuevoDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoDetActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnModificar.setText("Editar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTotal.setText("Total:");

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtTotal.setMinimumSize(new java.awt.Dimension(150, 26));
        txtTotal.setPreferredSize(new java.awt.Dimension(150, 26));

        tablaDetallesCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaDetallesCompra.setPreferredSize(new java.awt.Dimension(660, 300));
        jScrollPane1.setViewportView(tablaDetallesCompra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevoDet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuitar)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIdCompra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(lblProveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(lblTitulo)
                .addGap(167, 167, 167)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdCompra)
                    .addComponent(lblFecha)
                    .addComponent(lblProveedor)
                    .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(lblTotal)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar)
                    .addComponent(btnQuitar)
                    .addComponent(btnNuevoDet))
                .addGap(35, 35, 35))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(108, 108, 108)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(109, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        cargarDatos(compra.getIdCompra());
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // TODO add your handling code here:
        int filaSelecionada = tablaDetallesCompra.getSelectedRow();
        if (filaSelecionada < 0) {
            JOptionPane.showMessageDialog(null, "Elija un detalle para quitar");
        } else {
            int idDetCompra = Integer.parseInt(tablaDetallesCompra.getValueAt(filaSelecionada, 0).toString()) ;
            detCompData.eliminarDetalle(idDetCompra);
            cargarDatos(compra.getIdCompra());
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void btnNuevoDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoDetActionPerformed
        // TODO add your handling code here:
        DetalleCompraView detCompView = new DetalleCompraView(compra);
        detCompView.setVisible(true);
        Principal.EscritorioPrinc.add(detCompView);
        Principal.EscritorioPrinc.moveToFront(detCompView);
    }//GEN-LAST:event_btnNuevoDetActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int filaSelecionada = tablaDetallesCompra.getSelectedRow();
        if (filaSelecionada < 0) {
            JOptionPane.showMessageDialog(null, "Elija un detalle para modificar");
        } else {
            int idDetCompra = Integer.parseInt(tablaDetallesCompra.getValueAt(filaSelecionada, 0).toString()) ;
            DetalleCompraView detCompView = new DetalleCompraView(idDetCompra);
            detCompView.setVisible(true);
            Principal.EscritorioPrinc.add(detCompView);
            Principal.EscritorioPrinc.moveToFront(detCompView);
        }
    }//GEN-LAST:event_btnModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevoDet;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIdCompra;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tablaDetallesCompra;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdCompra;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        ArrayList<Object> columns = new ArrayList<Object>();
        columns.add("ID");
        columns.add("Nombre");
        columns.add("Categoría");
        columns.add("Cantidad");
        columns.add("Precio");
        for (Object it : columns) {
            modelo.addColumn(it);
        }
        tablaDetallesCompra.setModel(modelo);        
    }
    
    public void borrarFilasTabla(){
        int a = modelo.getRowCount()-1;
        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    public void cargarDatos(int idCompra) {
        borrarFilasTabla();
        //venta = ventaData.buscarVenta(idVenta);
        listaDetallesCompra = (ArrayList)detCompData.listaDetalleCompras(idCompra);        
        txtFecha.setText(compra.getFecha().toString());
        txtIdCompra.setText(compra.getIdCompra()+"");
        txtProveedor.setText(compra.getProveedor().getRazonSocial()+" ");
        txtTotal.setText(detCompData.montoTotal(compra.getIdCompra())+"");
        for (DetalleCompra detalleCompra : listaDetallesCompra) {
            modelo.addRow(new Object[]{detalleCompra.getIdDetalle(), detalleCompra.getProducto().getNombre(), detalleCompra.getProducto().getCategoria(), detalleCompra.getCantidad(), detalleCompra.getPrecioCosto()});
        }

    }

}
